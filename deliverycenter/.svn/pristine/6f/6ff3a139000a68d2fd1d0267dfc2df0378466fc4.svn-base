package com.ve.deliverycenter.core.manager.fee.impl;

import java.util.ArrayList;
import java.util.List;

import com.ve.deliverycenter.common.dto.fee.StdFeeDTO;
import com.ve.deliverycenter.common.qto.fee.StdFeeQTO;
import com.ve.deliverycenter.core.domain.BaseDo;
import com.ve.deliverycenter.core.domain.fee.StdFee;
import com.ve.deliverycenter.core.exception.DeliveryException;
import com.ve.deliverycenter.core.manager.BaseManager;
import com.ve.deliverycenter.core.manager.fee.intef.StdFeeManager;
import com.ve.deliverycenter.core.util.TransUtil;

public class StdFeeManagerImpl extends BaseManager implements StdFeeManager {

	@Override
	public StdFeeDTO addStdFee(StdFeeDTO stdFeeDTO) {
		// 创建一个DO
		BaseDo stdFee = new StdFee();
		// DTO转换成DO
		stdFee = TransUtil.trans2Do(stdFeeDTO, stdFee);
		// 执行新增操作
		stdFee = getBaseDao().insert(stdFee);
		// DO转换成DTO
		stdFeeDTO = (StdFeeDTO) TransUtil.trans2Dto(stdFeeDTO, stdFee);
		return stdFeeDTO;
	}

	@Override
	public int updateStdFee(StdFeeDTO stdFeeDTO) {
		// 创建一个DO
		BaseDo stdFee = new StdFee();
		// DTO转换成DO
		stdFee = TransUtil.trans2Do(stdFeeDTO, stdFee);
		// 执行更新操作
		int row = getBaseDao().update(stdFee);
		return row;
	}

	@Override
	public int deleteStdFee(int id) {
		// 创建一个DO
		StdFee stdFee = new StdFee();
		// DO赋值逻辑删除
		stdFee.setId(id);
		stdFee.setDeleted(1);
		// 执行更新操作
		int row = getBaseDao().update(stdFee);
		return row;
	}

	@Override
	public List queryStdFee(StdFeeQTO stdFeeQTO) throws DeliveryException {
		List<BaseDo> stdFeeList = getBaseDao().query(stdFeeQTO);

		List<StdFeeDTO> stdFeeDTOList = new ArrayList<StdFeeDTO>();
		for (BaseDo stdFee : stdFeeList) {
			// 创建一个DtO
			StdFeeDTO stdFeeDTO = new StdFeeDTO();
			// DO转换成DTO
			stdFeeDTO = (StdFeeDTO) TransUtil.trans2Dto(stdFeeDTO, stdFee);
			stdFeeDTOList.add(stdFeeDTO);
		}
		return stdFeeDTOList;
	}

	@Override
	public StdFee getStdFee(int id) {
		StdFee stdFee = new StdFee();
		stdFee.setId(id);
		return (StdFee) getBaseDao().get(stdFee);
	}

}
