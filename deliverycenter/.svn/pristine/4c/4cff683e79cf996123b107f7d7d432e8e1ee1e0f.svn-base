package com.ve.deliverycenter.core.service.action.storage;

import javax.annotation.Resource;

import org.junit.Test;

import com.ve.deliverycenter.common.api.BaseRequest;
import com.ve.deliverycenter.common.api.DeliveryService;
import com.ve.deliverycenter.common.api.Request;
import com.ve.deliverycenter.common.api.Response;
import com.ve.deliverycenter.common.constant.ActionEnum;
import com.ve.deliverycenter.common.dto.storage.StorageDTO;
import com.ve.deliverycenter.common.qto.storage.StorageQTO;
import com.ve.deliverycenter.core.service.BaseTest;

public class StorageActionTest extends BaseTest {

	@Resource
	private DeliveryService deliveryService;

	@Test
	public void testAddStorage() throws Exception {
		// 创建一个DTO并赋值
		StorageDTO storageDTO = new StorageDTO();
		storageDTO.setAddress("浙江省杭州市");
		storageDTO.setAdmin("王五");
		storageDTO.setAdminTel("15874586524");
		storageDTO.setIsDefault(false);
		storageDTO.setName("浙江省杭州市仓库");
		storageDTO.setShortName("杭州库");
		storageDTO.setStatus(1);
		// 创建request对象并赋值
		Request request = new BaseRequest();
		request.setCommand(ActionEnum.ADD_STORAGE.getActionName());
		request.setParam("storageDTO", storageDTO);
		// 执行分发执行对应Action
		Response response = deliveryService.execute(request);
		System.out.println(response);
	}

	@Test
	public void testUpdateStorage() throws Exception {
		// 创建一个DTO并赋值
		StorageDTO storageDTO = new StorageDTO();
		storageDTO.setId(3);
		storageDTO.setAddress("2");
		storageDTO.setAdmin("2");
		storageDTO.setAdminTel("2");
		storageDTO.setIsDefault(false);
		storageDTO.setName("2");
		storageDTO.setShortName("2");
		storageDTO.setStatus(0);

		// 创建request对象并赋值
		Request request = new BaseRequest();
		request.setCommand(ActionEnum.UPDATE_STORAGE.getActionName());
		request.setParam("storageDTO", storageDTO);
		// 执行分发执行对应Action
		Response response = deliveryService.execute(request);
		System.out.println(response);
	}

	@Test
	public void testDeleteStorage() throws Exception {
		int id = 3;
		// 创建request对象并赋值
		Request request = new BaseRequest();
		request.setCommand(ActionEnum.DELETE_STORAGE.getActionName());
		request.setParam("id", id);
		// 执行分发执行对应Action
		Response response = deliveryService.execute(request);
		System.out.println(response);
	}

	@Test
	public void testQueryStorage() throws Exception {
		// 创建一个QTO并赋值
		StorageQTO storageQTO = new StorageQTO();
		storageQTO.setPageNo(1);
		storageQTO.setPageSize(50);
		storageQTO.setStatus(1);
		// 创建request对象并赋值
		Request request = new BaseRequest();
		request.setCommand(ActionEnum.QUERY_STORAGE.getActionName());
		request.setParam("storageQTO", storageQTO);
		// 执行分发执行对应Action
		Response response = deliveryService.execute(request);
		System.out.println(response);
	}

}
