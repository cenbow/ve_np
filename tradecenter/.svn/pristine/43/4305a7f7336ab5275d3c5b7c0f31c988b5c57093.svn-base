package com.ve.tradecenter.core.service.action.cart;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ve.tradecenter.common.constant.ErrorCode;
import com.ve.tradecenter.common.constant.ResponseCode;
import com.ve.tradecenter.core.domain.CartItemDO;
import com.ve.tradecenter.core.exception.TradeException;
import com.ve.tradecenter.core.manager.UserCartItemManager;
import com.ve.tradecenter.core.service.RequestContext;
import com.ve.tradecenter.core.service.ResponseUtils;
import com.ve.tradecenter.core.service.TradeRequest;
import com.ve.tradecenter.core.service.TradeResponse;
import com.ve.tradecenter.core.service.action.Action;
import com.ve.tradecenter.core.service.action.ActionEnum;
/**
 * 更新购物车数量处理类
 * @author cwr
 */
public class UpdateUserCartItem implements Action{
	private static final Logger log = LoggerFactory.getLogger(UpdateUserCartItem.class);

	@Resource
	private UserCartItemManager UserCartItemManager;

	@Override
	public TradeResponse execute(RequestContext context) throws TradeException {
		TradeRequest request = context.getRequest();
		TradeResponse<Boolean> response = null;
		if(request.getParam("number") == null){
			log.error("number is null");
			return ResponseUtils.getFailResponse(ResponseCode.PARAM_E_PARAM_MISSING,"number is null");
		}else if(request.getParam("userId") == null){
			log.error("userId is null");
			return ResponseUtils.getFailResponse(ResponseCode.PARAM_E_PARAM_MISSING,"userId is null");
		}else if(request.getParam("cartItemId") == null){
			log.error("cartItemId is null");
			return ResponseUtils.getFailResponse(ResponseCode.PARAM_E_PARAM_MISSING,"cartItemId is null");
		}
		
		Integer number = (Integer)request.getParam("number");
		Long userId = (Long)request.getParam("userId");
		Long id = (Long)request.getParam("id");
		
		CartItemDO cartItemDO = new CartItemDO();
		cartItemDO.setNumber(number);
		cartItemDO.setId(id);
		cartItemDO.setUnitPrice(userId);
		
		int result =0;
		try{
			result = this.UserCartItemManager.updateUserCartItem(cartItemDO);
		}catch(TradeException e){
			log.error("eb error : " + e);
			return ResponseUtils.getFailResponse(ResponseCode.SYS_E_DATABASE_ERROR);
		}
		if(result > 0){
			return  ResponseUtils.getSuccessResponse(true);
		}else{
			log.error("user cartItem doesn't exist");
			return  ResponseUtils.getFailResponse(ResponseCode.BIZ_E_RECORD_NOT_EXIST,"user cartItem doesn't exist");
		}
	}

	@Override
	public String getName() {
		return ActionEnum.UPDATE_USER_CART_ITEM.getActionName();
	}
}
