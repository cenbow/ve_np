package com.ve.tradecenter.core.service.action.order;




import java.util.Date;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ve.tradecenter.common.api.Request;
import com.ve.tradecenter.common.api.TradeResponse;
import com.ve.tradecenter.common.constant.ResponseCode;
import com.ve.tradecenter.core.domain.OrderDO;
import com.ve.tradecenter.core.exception.TradeException;
import com.ve.tradecenter.core.manager.OrderManager;
import com.ve.tradecenter.core.service.RequestContext;
import com.ve.tradecenter.core.service.ResponseUtils;
import com.ve.tradecenter.core.service.action.Action;
import com.ve.tradecenter.core.service.action.ActionEnum;
import com.ve.tradecenter.core.service.action.cart.AddCartItem;

/**
 * 根据订单ID删除订单处理类
 * @author cwr
 */
public class deleteOrder implements Action{
	private static final Logger log = LoggerFactory.getLogger(AddCartItem.class);
	
	@Resource 
	private OrderManager orderManager;

	public TradeResponse<Boolean> execute(RequestContext context) throws TradeException {
		Request request = context.getRequest();
		TradeResponse<Boolean> response = null;
		if(request.getParam("userId") == null){
			log.error("userId is null ");
			return ResponseUtils.getFailResponse(ResponseCode.PARAM_E_PARAM_MISSING,"userId is null");
		}else if( request.getParam("orderId") == null){
			log.error("orderId is null ");
			return ResponseUtils.getFailResponse(ResponseCode.PARAM_E_PARAM_MISSING,"orderId is null");
		}
		
		Long userId =(Long)request.getParam("userId");
		Long orderId = (Long)request.getParam("orderId");
		
		OrderDO order = this.orderManager.getActiveOrder(orderId, userId);
		if(order == null){
			log.error("order doesn't exist :  " + orderId+ " ," +userId);
			return ResponseUtils.getFailResponse(ResponseCode.BIZ_E_RECORD_NOT_EXIST,"order doesn't exit");
		}
		int result = 0;
		try {
			result = this.orderManager.deleteOrder(orderId, userId,new Date());
		} catch (Exception e) {
			log.error(e.getMessage());
			response = ResponseUtils.getFailResponse(ResponseCode.SYS_E_DATABASE_ERROR);
		}
		boolean module = result > 0 ? true: false; // 是否逻辑删除如果逻辑删除成功！
		response = ResponseUtils.getSuccessResponse(module);
		return response;
	}

	@Override
	public String getName() {
		return ActionEnum.DELETE_ORDER.getActionName();
	}
	
}
