package com.ve.usercenter.core.manager.impl;

import java.util.Date;

import javax.annotation.Resource;

import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;

import com.ve.usercenter.common.constant.ResponseCode;
import com.ve.usercenter.common.dto.UserDTO;
import com.ve.usercenter.common.dto.UserExtraInfoDTO;
import com.ve.usercenter.core.dao.UserExtraInfoDao;
import com.ve.usercenter.core.domain.UserExtraInfoDO;
import com.ve.usercenter.core.exception.UserException;
import com.ve.usercenter.core.manager.UserExtraInfoManage;
import com.ve.usercenter.core.manager.UserManager;

@Service
public class UserExtraInfoManageImpl implements UserExtraInfoManage {

	@Resource
	private UserManager userManager;

	@Resource
	private UserExtraInfoDao userExtraInfoDao;

	@Override
	public UserExtraInfoDTO addUserExtraInfo(UserExtraInfoDTO userExtraDto)
			throws UserException {

		UserExtraInfoDTO userExtraInfoDto = null;

		if (null == userExtraDto) {
			throw new UserException(ResponseCode.P_PARAM_NULL,
					"userExtraDto is not exist");
		}

		// 查找在用户表中是否存在指定的用户
		UserDTO userDto = userManager.getUserById(userExtraDto.getUserId());

		if (null == userDto) {
			throw new UserException(ResponseCode.B_SELECT_ERROR,
					"user is not exist");
		}

		// 判断用户扩展表中是否已经存在指定用户的扩展信息
		userExtraInfoDto = getUserExtraInfoByUserId(userExtraDto.getUserId());

		if (null != userExtraInfoDto) {
			throw new UserException(ResponseCode.B_ADD_ERROR,
					"user information is already exist");
		}

		UserExtraInfoDO userExtraDo = new UserExtraInfoDO();
		BeanUtils.copyProperties(userExtraDto, userExtraDo);

		Date date = new Date();
		userExtraDo.setGmtCreated(date);
		userExtraDo.setGmtModified(date);

		// 添加记录
		Long id = userExtraInfoDao.addUserExtraInfo(userExtraDo);
		return getUserExtraInfoById(id);
	}

	@Override
	public UserExtraInfoDTO getUserExtraInfoById(Long id) throws UserException {

		if (null == id) {
			throw new UserException(ResponseCode.P_PARAM_NULL, "id is null");
		}

		if (id < 0) {
			throw new UserException(ResponseCode.P_PARAM_ERROR,
					"idd must greater than zero");
		}

		UserExtraInfoDO userExtraInfoDo = userExtraInfoDao
				.getUserExtraInfoById(id);
		UserExtraInfoDTO userExtraInfoDto = new UserExtraInfoDTO();
		BeanUtils.copyProperties(userExtraInfoDo, userExtraInfoDto);
		return userExtraInfoDto;
	}

	@Override
	public UserExtraInfoDTO getUserExtraInfoByUserId(Long userId)
			throws UserException {
		if (null == userId) {
			throw new UserException(ResponseCode.P_PARAM_NULL,
					"user id is null");
		}

		if (userId < 0) {
			throw new UserException(ResponseCode.P_PARAM_ERROR,
					"userId must greater than zero");
		}

		UserExtraInfoDO userExtraInfoDo = userExtraInfoDao
				.getUserExtraInfoByUserId(userId);
		UserExtraInfoDTO userExtraInfoDto = null;
		if (null != userExtraInfoDo) {
			userExtraInfoDto = new UserExtraInfoDTO();
			BeanUtils.copyProperties(userExtraInfoDo, userExtraInfoDto);
		}

		return userExtraInfoDto;
	}

	@Override
	public int updateUserExtraInfo(UserExtraInfoDTO userExtraDto)
			throws UserException {
		UserExtraInfoDTO userExtraInfoDto = null;
		// 查找在用户表中是否存在指定的用户
		UserDTO userDto = userManager.getUserById(userExtraDto.getUserId());

		if (null == userDto) {
			throw new UserException(ResponseCode.B_SELECT_ERROR,
					"user is not exist");
		}

		// 判断用户扩展表中是否已经存在指定用户的扩展信息
		userExtraInfoDto = getUserExtraInfoByUserId(userExtraDto.getUserId());

		if (null == userExtraInfoDto) {
			throw new UserException(ResponseCode.B_UPDATE_ERROR,
					"appoint record is null");
		}

		UserExtraInfoDO userExtraDo = new UserExtraInfoDO();
		BeanUtils.copyProperties(userExtraDto, userExtraDo);

		Date date = new Date();
		userExtraDo.setGmtModified(date);

		int result = userExtraInfoDao.updateUserExtraInfo(userExtraDo);

		if (result != 1) {
			throw new UserException(ResponseCode.B_DELETE_ERROR, "update error");
		}
		return result;
	}

}
